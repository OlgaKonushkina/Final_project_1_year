import streamlit as st
import numpy as np
import pandas as pd
import joblib

# === –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å (–∫—ç—à–∏—Ä—É–µ–º) ===
@st.cache_resource
def load_model():
    return joblib.load("xgb_model.pkl")

xgb_model = load_model()

# === –ó–∞–≥–æ–ª–æ–≤–æ–∫ ===
st.title("üöÄ ML –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ")
st.write("–í–≤–µ–¥–∏—Ç–µ 20 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, –∏ –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∂–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")

# === –ü–æ–ª—è –≤–≤–æ–¥–∞ (20 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤) ===
# –í–≤–æ–¥ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
feature1 = st.number_input("–†–µ–π—Ç–∏–Ω–≥ —à–∫–æ–ª—ã 2:")
feature2 = st.number_input("–†–µ–π—Ç–∏–Ω–≥ —à–∫–æ–ª—ã 1:")
feature3 = st.number_input("–†–µ–π—Ç–∏–Ω–≥ —à–∫–æ–ª—ã 3:")
feature4 = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω:")
feature5 = st.number_input("–û–¥–Ω–æ—Å–µ–º–µ–π–Ω—ã–π, –æ—Ç–¥–µ–ª—å–Ω—ã–π –¥–æ–º (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature6 = st.number_input("–®—Ç–∞—Ç, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ —é–≥–µ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature7 = st.number_input("–®—Ç–∞—Ç, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –≤–æ—Å—Ç–æ–∫–µ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature8 = st.number_input("–ù–∞–ª–∏—á–∏–µ –æ—Ç–æ–ø–ª–µ–Ω–∏—è (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature9 = st.number_input("–ù–∞–ª–∏—á–∏–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature10 = st.number_input("–ö–≤–∞—Ä—Ç–∏—Ä–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature11 = st.number_input("–®—Ç–∞—Ç, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ –∑–∞–ø–∞–¥–µ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature12 = st.number_input("2 —ç—Ç–∞–∂–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature13 = st.number_input("–ù–∞–ª–∏—á–∏–µ –ø–∞—Ä–∫–∏–Ω–≥–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature14 = st.number_input("1 —ç—Ç–∞–∂ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature15 = st.number_input("–ó–µ–º–ª—è (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature16 = st.number_input("–ù–∞–ª–∏—á–∏–µ –±–∞—Å—Å–µ–π–Ω–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature17 = st.number_input("–ù–∞–ª–∏—á–∏–µ –∫–∞–º–∏–Ω–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature18 = st.number_input("–õ–∏—à–µ–Ω –ø—Ä–∞–≤–∞ –≤—ã–∫—É–ø–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞)):")
feature19 = st.number_input("–®—Ç–∞—Ç, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ —Å–µ–≤–µ—Ä–µ (0 - –Ω–µ—Ç, 1 - –¥–∞):")
feature20 = st.number_input("3 —ç—Ç–∞–∂–∞ (0 - –Ω–µ—Ç, 1 - –¥–∞):")


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
if st.button("–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å"):    
    # –ü—Ä–∏–º–µ—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è 
    predicted_price = xgb_model.predict([[feature1, feature2, feature3, feature4, feature5, feature6, feature7, feature8, feature9, feature10, feature11, feature12, feature13, feature14, feature15, feature16, feature17, feature18, feature19, feature20]])
    st.write(f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: {predicted_price[0]}")
